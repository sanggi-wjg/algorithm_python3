def solution(n):
    fn = [1, 2, 4]

    if n in [1, 2, 3]:
        return fn.pop(n - 1)

    while len(fn) != n:
        fn.append(sum(fn[-3:]))

    return fn[n - 1]


T = int(input())
result = []

for _ in range(T):
    result.append(solution(int(input())))

print('\n'.join(map(str, result)))

"""
3
4
7
10

7
44
274

[1  2  3  4  5   6]
[1  2  4  7  13  24]
  +1 +2 +3 +6  +9

f(n) = f(n-3) + f(n-2) + f(n-1) / (단, n>3)
f(4) = f(1) + f(2) + f(3) = 1 + 2 + 4 = 7
f(5) = f(2) + f(3) + f(4) = 2 + 4 + 7 = 13
 
1 (1개)
1
- 1 

2 (2개)
1+1
2
- 1+1
- 2

3 (4개)
1+1+1
1+2
2+1
3
- 1+1+1
- 1+2
- 3

4 (7개)
1+1+1+1
1+1+2
1+2+1
2+1+1
1+3
3+1
2+2
- 1+1+1+1
- 1+1+2
- 1+3


5 (13개)
1+1+1+1+1
1+1+1+2
1+1+2+1
1+2+1+1
2+1+1+1
1+2+2
2+1+2
2+2+1
1+1+3
1+3+1
3+1+1
2+3
3+2

6 (24개)
1+1+1+1+1+1
1+1+1+1+2
1+1+1+2+1
1+1+2+1+1
1+2+1+1+1
2+1+1+1+1
1+1+2+2
1+2+1+2
2+1+1+2
2+1+2+1
2+2+1+1
2+2+2
1+1+1+3
1+1+3+1
1+3+1+1
3+1+1+1
1+2+3
1+3+2
2+1+3
2+3+1
3+1+2
3+2+1
3+3
"""
